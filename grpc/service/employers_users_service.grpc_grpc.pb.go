// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EmployersUsersServiceClient is the client API for EmployersUsersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EmployersUsersServiceClient interface {
	UpdateCompanyProfile(ctx context.Context, in *UpdateCompanyProfileRequest, opts ...grpc.CallOption) (*UpdateCompanyProfileResponse, error)
}

type employersUsersServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEmployersUsersServiceClient(cc grpc.ClientConnInterface) EmployersUsersServiceClient {
	return &employersUsersServiceClient{cc}
}

func (c *employersUsersServiceClient) UpdateCompanyProfile(ctx context.Context, in *UpdateCompanyProfileRequest, opts ...grpc.CallOption) (*UpdateCompanyProfileResponse, error) {
	out := new(UpdateCompanyProfileResponse)
	err := c.cc.Invoke(ctx, "/protos.service.EmployersUsersService/UpdateCompanyProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmployersUsersServiceServer is the server API for EmployersUsersService service.
// All implementations must embed UnimplementedEmployersUsersServiceServer
// for forward compatibility
type EmployersUsersServiceServer interface {
	UpdateCompanyProfile(context.Context, *UpdateCompanyProfileRequest) (*UpdateCompanyProfileResponse, error)
	mustEmbedUnimplementedEmployersUsersServiceServer()
}

// UnimplementedEmployersUsersServiceServer must be embedded to have forward compatible implementations.
type UnimplementedEmployersUsersServiceServer struct {
}

func (UnimplementedEmployersUsersServiceServer) UpdateCompanyProfile(context.Context, *UpdateCompanyProfileRequest) (*UpdateCompanyProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCompanyProfile not implemented")
}
func (UnimplementedEmployersUsersServiceServer) mustEmbedUnimplementedEmployersUsersServiceServer() {}

// UnsafeEmployersUsersServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EmployersUsersServiceServer will
// result in compilation errors.
type UnsafeEmployersUsersServiceServer interface {
	mustEmbedUnimplementedEmployersUsersServiceServer()
}

func RegisterEmployersUsersServiceServer(s grpc.ServiceRegistrar, srv EmployersUsersServiceServer) {
	s.RegisterService(&EmployersUsersService_ServiceDesc, srv)
}

func _EmployersUsersService_UpdateCompanyProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCompanyProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmployersUsersServiceServer).UpdateCompanyProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.EmployersUsersService/UpdateCompanyProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmployersUsersServiceServer).UpdateCompanyProfile(ctx, req.(*UpdateCompanyProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EmployersUsersService_ServiceDesc is the grpc.ServiceDesc for EmployersUsersService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EmployersUsersService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protos.service.EmployersUsersService",
	HandlerType: (*EmployersUsersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateCompanyProfile",
			Handler:    _EmployersUsersService_UpdateCompanyProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/service/employers_users_service.grpc.proto",
}
